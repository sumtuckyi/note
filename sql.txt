함수 종속성
어떤 속성 A의 값을 알면 다른 속성 B의 값이 유일하게 정해지는 관계
ex)과목명을 알면 지도교수를 알 수 있는 경우, 과목명은 지도교수의 결정자라고 한다. 
A->B 로 표기 
A는 B의 결정자라고 한다.

※제 N정규형 만족은 제 (N+1)정규형 만족의 필요조건이다. 
<제 1정규형>
각 컬럼이 하나의 속성만을 가져야 한다
=> 중복속성을 분리하여 별도의 엔터티로 만든다.
<제 2정규형>
모든 컬럼이 부분적 종속이 없어야 한다.(모든 칼럼이 완전 함수 종속을 만족해야 한다.)
부분적 종속이란 기본키 중에 특정 컬럼에만 종속되는 것이다.(예를 들어 기본키가 복합키인 경우)
=> 기본키 중 특정 컬럼에만 종속되는 컬럼과 해당 컬럼이 종속되는 기본키를 가지고 테이블을 분해해야한다. 
<제 3정규형>
기본키를 제외한 속성들 간의 이행 종속성이 없어야 한다. 
이행종속성이란 A->B, B->C일 때, A->C가 성립하는 것을 말한다.
=> A->B, B->C로 테이블을 분해해야한다. 
<BCNF (Boyce-Codd Normal Form)>
모든 결정자가 후보키 집합에 속해야 한다.
즉, 후보키 집합에 없는 칼럼이 결정자가 되어서는 안 된다. 
<제 4정규형>
<제 5정규형>



※후보키
행의 식별을 위해 필요한 속성의 집합을 후보키라고 하며,
슈퍼키 중 더 이상 줄일 수 없는 형태를 가진 것을 말한다.(유일성과 최소성을 모두 만족) 
(슈퍼키란 행을 고유하게 식별할 수 있는 속성 또는 속성의 집합으로
대상관계의 모든 속성이 함수 종속하는 속성의 집합으로 정의할 수 있다.)(유일성만 만족)


FK
기본키 값이 있는 테이블을 다른 테이블과 연결할 때 사용한다.
기본키를 가지고 있는 부모 테이블이 생성되어야 외래키를 가지는 자식 테이블을 생성할 수 있다. 
외래키의 이름은 중복되어서는 안된다. 

논리 데이터 모델의 슈퍼 타입/서브 타입을 테이블로 변환
슈퍼타입 기준 : 서브타입을 슈퍼타입에 통합하여 하나의 테이블로 만드는 것
서브타입에 속성이나 관계가 적을 경우에 적용하는 방법으로, 하나로 통합된 테이블에는 서브타입의 
모든 속성이 포함되어야 한다.
서브타입 기준 : 슈퍼타입 속성들을 각각의 서브타입에 추가하여 서브타입들을 개별적인 테이블로 만드는 것
서브타입에 속성이나 관계가 많이 포함된 경우 적용한다. 
개별타입 기준 : 슈퍼타입과 서브타입들을 각각의 개별적인 테이블로 변환하는 것

인덱스와 PK의 구분
인덱스를 통해 데이터를 조회 : 인덱스를 통해 PK를 찾음 -> PK를 통해 레코드를 찾음

Cardinality : 특정 컬럼에 존재하는 데이터의 고유성을 의미. 카디날리티가 높을수록 중복도가 낮아진다. 
일반적으로 값이 고유할수록 검색대상이 줄어서 처리가 빠르다.

cartesian product :
From절에 2개 이상의 Table이 있을때 두 Table 사이에 유효 join 조건을 적지 않았을때
해당 테이블에 대한 모든 데이터를 전부 결합하여 Table에 존재하는 행 갯수를 곱한 만큼의 결과값이 반환되는 것

OVER
: 함수에 대해 특정 행 집합을 적용한다는 의미로 사용
예시) SUM(수량) OVER(ORDER BY 날짜) AS 재고
OVER절은 윈도우 함수(행 사이의 관계를 정의하는 함수) 중 하나로 GROUP BY와 구분된다.
GROUP BY는 결과 행 개수에 영향을 미치지만 OVER절은 영향을 미치지 않는다. 

★★JOIN★★
INNER JOIN
: 지정한 열을 기준으로 두 테이블을 조인하는데, 이때 지정한 열의 데이터가 모두 있는 행만 연결된다.
LEFT JOIN(OUTER JOIN)
: 조인하려는 한 쪽의 테이블에만 지정한 열의 데이터가 있어도 행의 연결이 가능하며, 이때 왼쪽 테이블의
모든 행의 값이 출력된다. 
