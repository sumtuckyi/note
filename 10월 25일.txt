function
: 참조 자료형(변수가 object의 주소를 가리키는 자료형), Function object
-return값이 없다면 undefined를 반환
(함수 정의 2가지 방법)
-선언식 : 호이스팅 됨
-★표현식★ : 표현식으로 정의한 함수는 ☆호이스팅☆ 되지 않으므로(var를 사용해도 마찬가지) 정의하기 전에 먼저 사용할 수 없음
/ 표현식 함수 정의는 일반적으로 익명함수이나, 재귀 호출이 필요한 경우에는 이름을 생략할 수 없다.
/ var로 정의하더라도 'var 변수명'으로 파일의 최상단에서 선언된다고 해서 해당 함수가 초기화 된 것이 아니기 때문에
호출할 수 없다.  
-매개변수 
1.기본 함수 매개변수 : 값이 없거나 undefined가 전달될 경우 이름 붙은 매개변수를 기본값으로 초기화
2.나머지 매개변수 : 임의의 수의 인자를 '배열'로 허용하여 가변 인자를 나타냄 / 함수 정의 시 나머지 매개변수 하나만 작성할 수 있음
/ 나머지 매개변수는 함수 정의 시 가장 마지막 매개변수로 작성되어야 함

※☆호이스팅☆
: 변수나 함수 ★선언★이 파일의 최상단에서 이루어진 것으로 처리 

spread구문
: 배열이나 문자열과 같이 반복 가능한 항목을 펼치는 것 -> 함수 호출하여 인자를 전달할 때/ 
함수 정의 시 나머지 매개변수를 압축 /  

화살표 함수의 작동 방식
-표현식 함수 정의에서만 사용?
() => {}
일반적 함수와 다르게 this가 전역 객체를 가리키지 않음

object 
: 키로 구분된 데이터 집합을 저장하는 자료형
-key:value로 구성된 속성(property)의 집합
-key는 문자형만 허용 
★method★ : ☆객체 속성에 정의된 함수☆
-object.method() 형태로 호출

♥this♥
:함수나 메서드를 호출한 객체를 가리키는 키워드 -> this.property_name or this.method()이런 식으로 object를 지정하고 해당 object의 속성이나 메서드에 접근
-★함수가 호출되는 방식에 따라 결정되는(동적할당)★ 현재 object를 가리킴 
1.단순호출 : 전역 객체를 가리킴
2.메서드 호출 : 메서드를 호출한 객체
-함수(메서드)를 하나만 만들어 여러 객체에서 재사용할 수 있음

☆☆☆forEach(callback func)의 인자인 콜백함수가 일반적인 함수인 경우에는 this가 전역 객체를 가리키게 되나,
콜백함수로 화살표 함수를 사용하면 인접한 상위 함수에서 this 값을 가져오게 된다.  
=> 일반화 하면 화살표 함수가 정의된 곳(In a programming language, an item's lexical scope is the place in which it was created)을 기준으로 한 단계 상위 스코프
의 this값을 가져온다. -> 따라서 객체 내의 속성 value로 화살표 함수를 사용하면 객체 바로 한 단계 상위 스코프에서 this값을 찾기 때문에 
★★★object에서 속성값으로 함수를 사용할 때에는 화살표 함수 대신 일반적인 함수를 쓰고,
콜백함수로서는 화살표 함수를 써야 원하는 객체를 가리킬 수 있다. ★★★

※python의 self와 java의 this는 선언 시 값이 이미 정해진다. 

java script object 
1.단축 구문 : 키 이름과 값으로 쓰이는 변수명이 동일하면 하나만 쓸 수 있음
2.단축 메서드 : 메서드 선언 시 function 키워드 생략 가능 
3.계산된 속성 :
4.♥구조 분해 할당(destructing assignment) : 배열 또는 객체를 분해하여 속성을 변수에 쉽게 할당할 수 있는 문법
: 객체의 경우, key값과 동일한 이름을 사용하여야 함
5.전개 구문 : 객체 복사
6.유용한 객체 메서드
7.optional chaining : 속성이 없는 중첩 객체를 에러 없이 접근할 수 있음(참조 대상이 null 또는 undefined라면 에러가
발생하는 대신 평가를 멈추고  undefined를 반환) 

※new 연산자 
: 사용자 정의 object(class 또는 함수)type이나 내장 object type의 새로운 인스턴스를 생성

array
순서가 있는 데이터 집합을 저장하는 자료구조
array helper method -> forEach, map
: 배열을 순회하며 특정 로직을 수행하는 메서드, 메서드 호출 시 인자로 함수를 받는 것이 특징
-array 주요 메서드 : push, pop / unshift, shift
-배열도 객체다.

★callback 함수★
: 다른 함수에 인자로 전달되는 함수
-배열에 사용자 정의 로직을 적용하고 싶을 때 주로 사용
1.함수의 재사용성
★2.비동기적 처리 측면★
예를 들어 setTimeout함수는 콜백 함수를 인자로 받아 해당 콜백함수를 일정 시간이 지난 후에 실행시킴

ex) forEach, map의 인자
-forEach() : undefined를 반환
-map() : 배열의 각 요소에 대해 작업을 수행한 결과값을 담은 배열을 반환

JSON
JSON파일의 내용은 문자열
파이썬에서는 리스트나 딕셔너리 타입으로 바꿨다면,
자바 스크립트에서는 object 타입으로  